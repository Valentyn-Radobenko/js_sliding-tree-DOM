{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCKA,IAAK,IAHC,EAAS,SAAS,gBAAgB,CAAC,MACnC,EAAoB,EAAE,CAEnB,EAAI,EAAG,EAAI,EAAO,MAAM,CAAE,IAAK,CACtC,IAAM,EAAW,CAAM,CAAC,EAAE,CAAC,aAAa,CAClC,EAAa,SAAS,aAAa,CAAC,OAE1C,CAAA,EAAW,WAAW,CAAG,EAAS,UAAU,CAAC,WAAW,CACxD,EAAS,YAAY,CAAC,EAAY,CAAM,CAAC,EAAE,EAC3C,EAAS,WAAW,CAAC,EAAS,UAAU,EACxC,EAAkB,IAAI,CAAC,EACzB,CAXA,IAaK,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAc,CAAA,CAAA,OAAA,QAAA,CAAA,GAAd,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,GAAA,A,WAAK,IAAM,EAAN,EAAA,KAAA,CAGH,AAFe,EAAK,aAAa,CAAC,QAE3B,gBAAgB,CAAC,QAAS,SAAC,CAAlC,EACE,EAAE,eAAe,GAEjB,IAAM,EAAW,C,EAAI,EAAK,QAAQ,C,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,KAAE,MAAM,CACxC,SAAC,CADH,EACa,MAAA,AAAkB,OAAlB,EAAM,OAAO,A,GAEpB,EAAY,EAAS,IAAI,CAAC,SAAC,CAAjC,EAA2C,MAAA,AAAwB,SAAxB,EAAM,KAAK,CAAC,OAAO,A,GAEzD,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,I,EAAK,EAAA,EAAe,CAAA,CAAA,OAAA,QAAA,CAAA,GAAf,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACG,KAAK,CAAC,OAAO,CAAG,EAAY,OAAS,O,C,M,E,CADxC,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGP,EACF,G,C,M,E,CAfK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar allUls = document.querySelectorAll(\"ul\");\nvar listsWithChildren = [];\nfor(var i = 1; i < allUls.length; i++){\n    var parentLi = allUls[i].parentElement;\n    var headerSpan = document.createElement(\"span\");\n    headerSpan.textContent = parentLi.firstChild.textContent;\n    parentLi.insertBefore(headerSpan, allUls[i]);\n    parentLi.removeChild(parentLi.firstChild);\n    listsWithChildren.push(parentLi);\n}\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    var _loop = function() {\n        var list = _step.value;\n        var header = list.querySelector(\"span\");\n        header.addEventListener(\"click\", function(e) {\n            e.stopPropagation();\n            var children = _to_consumable_array(list.children).filter(function(child) {\n                return child.tagName === \"UL\";\n            });\n            var isVisible = children.some(function(child) {\n                return child.style.display !== \"none\";\n            });\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var child = _step.value;\n                    child.style.display = isVisible ? \"none\" : \"block\";\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        });\n    };\n    for(var _iterator = listsWithChildren[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true)_loop();\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\n\n//# sourceMappingURL=index.93e10106.js.map\n","'use strict';\n\nconst allUls = document.querySelectorAll('ul');\nconst listsWithChildren = [];\n\nfor (let i = 1; i < allUls.length; i++) {\n  const parentLi = allUls[i].parentElement;\n  const headerSpan = document.createElement('span');\n\n  headerSpan.textContent = parentLi.firstChild.textContent;\n  parentLi.insertBefore(headerSpan, allUls[i]);\n  parentLi.removeChild(parentLi.firstChild);\n  listsWithChildren.push(parentLi);\n}\n\nfor (const list of listsWithChildren) {\n  const header = list.querySelector('span');\n\n  header.addEventListener('click', (e) => {\n    e.stopPropagation();\n\n    const children = [...list.children].filter(\n      (child) => child.tagName === 'UL',\n    );\n    const isVisible = children.some((child) => child.style.display !== 'none');\n\n    for (const child of children) {\n      child.style.display = isVisible ? 'none' : 'block';\n    }\n  });\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","allUls","document","querySelectorAll","listsWithChildren","parentLi","parentElement","headerSpan","createElement","textContent","firstChild","insertBefore","removeChild","push","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_loop","list","value","header","querySelector","addEventListener","e","stopPropagation","children","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","filter","child","tagName","isVisible","some","style","display","err","return"],"version":3,"file":"index.93e10106.js.map"}